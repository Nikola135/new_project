Kada počinjemo sa radom, uvek bismo prvo trebali da uradimo: git fetch && git pull origin master
Ovde je origin git bookmark github linka koji vodi do projekta na kome radimo.
Master je grana projekta.

Ukoliko postoje konfikti, doćiće do auto merge-a.
Mesta gde je došlo do konflikta i spajanja će izgledati ovako:

<<<<<<< HEAD
Now let's make another conflict
=======
Another conflict, how many will there be...
>>>>>>> 7437fc940727810b29aef95fb3fb5080de0d5662

Prvi deo, između <<<<<<< HEAD i ====== je naša izmena.
Drugi deo, između ====== i >>>>>>>> fhaiuwefasifdbowebw je izmena koja se već nalazi na githubu.
Rešavamo konflikt tako što brišemo ove markere i ostavljamo samo ono što želimo da se nalazi u našem kodu.
Kada rešimo konflikte, pogledaj proces 2.

Ukoliko nije došlo do konflikta, sasvim normalno nastavljamo sa radom na projektu.

Proces 2.:
Kada završimo sa radom na jednoj celini, ili pauziramo sa radom na jednoj celini, poželjno je 
da uradimo: git add .
To će da doda sve filove u stageing
Onda bi trebalo uraditi: git commit
Ovom prilikom je poželjno da ostavimo neki razumni komentar kojim cemo ukratko, jasno i detaljno opisati
na čemu smo radili i kakve smo izmene tamo pravili. Uvek je poželjno da opisi budu detaljniji nego kratki.

Nakon toga radimo: git push
Pitaće nas za user name i password, mada mislim da to može da se doda u podesavanjima da ne bi
pitao svaki put.
Kraj Procesa 2.

Može se desiti da je neko pravio neke izmene u međuvremenu. U tom slučaju dolazi do konflikta.

Konflikti se rešavaju tako što, ZA SADA, prvo kopiramo sve naše izmene u neki temp folder, a onda:
git pull origin master
Tako ćemo opet auto mergovati fileove.

I onda dalje rešavamo konflikte kao sa pocetka file-a. U tom slučaju je dobro i kontaktirati onoga ko je
napravio izmene u međuvremenu i u konslutaciji sa njim videti šta će se zadržati, a šta ne.

:D
